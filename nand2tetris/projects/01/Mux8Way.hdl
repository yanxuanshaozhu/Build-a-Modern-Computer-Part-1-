// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way {
    IN a, b, c, d, e, f, g, h, sel[3];
    OUT out;

    PARTS:
    // Put your code here:
    Not(in = sel[0], out = nsel0);
    Not(in = sel[1], out = nsel1);
    Not(in = sel[2], out = nsel2);

    And(a = nsel0, b = nsel1, out = selX00);
    And(a = nsel0, b = sel[1], out = selX10);
    And(a = sel[0], b = nsel1, out = selX01);
    And( a = sel[0], b = sel[1], out = selX11);

    And(a = selX00, b = sel[2], out = sel100);
    And(a = selX00, b = nsel2, out = sel000);
    And(a = selX10, b = sel[2], out = sel110);
    And(a = selX10, b = nsel2, out = sel010);
    And(a = selX01, b = sel[2], out = sel101);
    And(a = selX01, b = nsel2, out = sel001);
    And(a = selX11, b = sel[2], out = sel111);
    And(a = selX11, b = nsel2, out = sel011);

    And(a = a, b = sel000, out = vala);
    And(a = b, b = sel001, out = valb);
    And(a = c, b = sel010, out = valc);
    And(a = d, b = sel011, out = vald);
    And(a = e, b = sel100, out = vale);
    And(a = f, b = sel101, out = valf);
    And(a = g, b = sel110, out = valg);
    And(a = h, b = sel111, out = valh);

    Or(a = vala, b = valb, out = valab);
    Or(a = valc, b = vald, out = valcd);
    Or(a = vale, b = valf, out = valef);
    Or(a = valg, b = valh, out = valgh);
    Or(a = valab, b = valcd, out = valad);
    Or(a = valef, b = valgh, out = valeh);
    Or(a = valad, b = valeh, out = out);
}